rules:
  # =======================================================================
  # 카테고리 1: 직접 참조 및 진입점
  # =======================================================================
  - id: "EXTERNAL_FILE_REFERENCE"
    description: "리소스 또는 Obj-C 헤더에서 직접 참조되는 심볼"
    pattern:
      - find: { target: S }
      - where:
          - "S.isReferencedByExternalFile == true"
  - id: "OS_ENTRY_POINT_DELEGATES"
    description: "AppDelegate, SceneDelegate 등 OS가 이름으로 직접 참조하는 핵심 클래스"
    pattern:
      - find: { target: S }
      - where:
          - "S.name in ['AppDelegate', 'SceneDelegate']"
  - id: "OBJC_ATTRIBUTE"
    description: "@objc 또는 @objcMembers 속성으로 Objective-C 런타임에 노출된 심볼"
    pattern:
      - find: { target: S }
      - where:
          - "S.attributes contains_any ['@objc', '@objcMembers']"

  # =======================================================================
  # 카테고리 2: 상속 및 구현 (UIKit 프로젝트 핵심)
  # =======================================================================
  - id: "UI_FRAMEWORK_SUBCLASSES"
    description: "주요 UI 프레임워크 클래스의 모든 서브클래스"
    pattern:
      - find: { target: C }
      - where:
          - "C.kind in ['class', 'struct']"
          - "C.typeInheritanceChain contains_any ['UIViewController', 'UINavigationController', 'UIView', 'UIResponder', 'UITableViewCell', 'UICollectionViewCell']"

  - id: "SYSTEM_LIFECYCLE_AND_DELEGATE_METHODS"
    description: "시스템이 직접 호출하는 핵심 생명주기 및 델리게이트 메서드"
    pattern:
      - find: { target: M }
      - where:
          - "M.kind == 'method'"
          # ✨ 마지막 누락분 추가
          - "M.name in ['viewDidLoad', 'viewWillAppear', 'viewDidAppear', 'viewWillDisappear', 'viewDidDisappear', 'viewDidLayoutSubviews', 'touchesBegan', 'application', 'scene', 'sceneDidBecomeActive', 'sceneWillResignActive', 'sceneDidEnterBackground', 'sceneWillEnterForeground', 'sceneDidDisconnect', 'textFieldDidEndEditing', 'preferredStatusBarStyle']"
          - "M.typeInheritanceChain contains_any ['UIViewController', 'UIResponder', 'AppDelegate', 'SceneDelegate', 'UITextFieldDelegate']"

  # =======================================================================
  # 카테고리 3: 일반 관례 및 이름 (지식 베이스 완성)
  # =======================================================================
  - id: "SYSTEM_TYPE_NAMES"
    description: "코드에서 명시적으로 사용되는 시스템 타입 이름"
    pattern:
      - find: { target: S }
      - where:
          - "S.isSystemSymbol == true"
          # ✨ 마지막 누락분 추가
          - "S.name in ['Array', 'Sequence', 'Notification.Name', 'MKMapView', 'UIView', 'UIButton', 'UICollectionView', 'UIFont', 'UIImage', 'UIImageView', 'UILabel', 'UIStackView', 'UITextField', 'Reactive']"

  - id: "STANDARD_PROTOCOL_REQUIREMENTS"
    description: "표준 프로토콜(예: LocalizedError)이 요구하는 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          # ✨ LocalizedError 관련 프로퍼티 추가
          - "P.name in ['id', 'errorDescription', 'recoverySuggestion', 'underlyingError']"

  - id: "CODABLE_PROPERTIES"
    description: "Codable을 준수하는 타입의 모든 프로퍼티"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.parent.typeInheritanceChain contains_any ['Codable', 'Decodable', 'Encodable']"

  - id: "COMMON_CONVENTION_PROPERTIES"
    description: "MVVM, RxSwift/Combine 등에서 관례적으로 사용되는 프로퍼티 이름"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          - "P.name in ['viewModel', 'disposeBag', 'reuseIdentifier', 'coordinator', 'repository', 'cancellable', 'semaphore', 'locationManager']"

  - id: "VERY_COMMON_PROPERTY_NAMES"
    description: "문맥에 상관없이 안전하게 제외해야 하는 매우 일반적인 프로퍼티 이름"
    pattern:
      - find: { target: P }
      - where:
          - "P.kind == 'property'"
          # ✨ 마지막 누락분 추가
          - "P.name in ['id', 'key', 'name', 'title', 'titleLabel', 'message', 'items', 'index', 'height', 'isSelected', 'attrString', 'paragraphStyle', 'placemark', 'rect', 'path', 'region', 'coordinate', 'placeholder', 'alert', 'view', 'button', 'imageView', 'contentView', 'tableView', 'window', 'barAppearance', 'maskLayer', 'appearance', 'collectionView', 'mapView', 'stackView', 'layout', 'refreshControl', 'colors', 'image', 'viewController', 'collectionViewLayout', 'setting']"

  - id: "COMMON_METHOD_NAMES"
    description: "관례적으로 사용되거나 재정의될 가능성이 높은 일반적인 메서드 이름"
    pattern:
      - find: { target: M }
      - where:
        - "M.kind == 'method'"
        # ✨ 마지막 누락분 추가
        - "M.name in ['run', 'set', 'get', 'add', 'remove', 'reset', 'clear', 'activate', 'apply', 'showAlert', 'save', 'next', 'cancelAction', 'deleteAllItems', 'resizableImage', 'rotate', 'getIsInBusiness', 'doneButton', 'call']"

  # =======================================================================
  # 카테고리 4: 핵심 언어 기능
  # =======================================================================
  - id: "INITIALIZERS_AND_OPERATORS"
    description: "모든 생성자(init) 및 연산자(== 등)"
    pattern:
      - find: { target: S }
      - where:
          - "S.kind in ['initializer', 'operator']"